---
# vim: et:ts=2:sw=2:sts=2

- hosts: server

  tasks:
    - name: install nginx
      become: yes
      package:
        state=present
        name=nginx

    - name: remove unnecessary files
      become: yes
      file:
        path=/etc/nginx/{{ item }}
        state=absent
      with_items:
        - default.d
        - fastcgi.conf
        - fastcgi.conf.default
        - fastcgi_params
        - fastcgi_params.default
        - koi-utf
        - koi-win
        - mime.types.default
        - nginx.conf.default
        - scgi_params
        - scgi_params.default
        - uwsgi_params
        - uwsgi_params.default
        - win-utf

    - name: configure nginx
      become: yes
      copy:
        src: files/{{ item }}
        dest: /etc/nginx/{{ item }}
      with_items:
        - mime.types
        - ssl.conf
        - nginx.conf
      register: nginx_restart

    - name: create conf.d
      become: yes
      file:
        path: /etc/nginx/conf.d
        state: directory
        mode: 0755

    - name: create ssl folder
      become: yes
      file:
        path: /etc/nginx/ssl
        state: directory
        owner: nginx
        group: nginx
        mode: 0700

    - name: generate dhparam
      become: yes
      become_user: nginx
      shell: openssl dhparam -out dhparam.pem 4096
      args:
        chdir: /etc/nginx/ssl
        creates: dhparam.pem
      register: nginx_restart

    - name: set dhparam owner
      become: yes
      file:
        path=/etc/nginx/ssl/dhparam.pem
        state=file
        owner=nginx
        group=nginx
        mode=0400

    - name: host configuration
      become: yes
      template:
        src=host.conf
        dest=/etc/nginx/conf.d/{{ inventory_hostname }}.conf
      register: nginx_restart

    - name: start nginx
      become: yes
      service:
        name=nginx
        enabled=yes
        state=started

    - name: restart nginx
      become: yes
      service:
        name=nginx
        state=restarted
      when: nginx_restart|changed

# acme configuration

    - name: create acme folder
      become: yes
      file:
        path=/etc/nginx/acme
        state=directory
        owner=nginx
        group=nginx
        mode=0744

    - name: download acme-tiny
      become: yes
      become_user: nginx
      get_url:
        url=https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py
        dest=/etc/nginx/acme/acme-tiny

    - name: download let's encrypt intermediate certificate
      become: yes
      become_user: nginx
      get_url:
        url=https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem
        dest=/etc/nginx/acme/lets-encrypt-x3-cross-signed.pem
        mode=0700

    - name: generate let's encrypt key
      become: yes
      become_user: nginx
      shell: openssl genrsa 4096 > account.key
      args:
        chdir: /etc/nginx/acme/
        creates: account.key

    - name: generate private key
      become: yes
      become_user: nginx
      shell: openssl genrsa 4096 > {{ inventory_hostname }}.key
      args:
        chdir: /etc/nginx/ssl/
        creates: "{{ inventory_hostname }}.key"

    - name: generate certificate request
      become: yes
      become_user: nginx
      shell: >
        openssl req -new -sha256
        -key /etc/nginx/ssl/{{ inventory_hostname }}.key
        -subj "/CN={{ inventory_hostname }}" >
        {{ inventory_hostname }}.csr
      args:
        chdir: /etc/nginx/acme/
        creates: "{{ inventory_hostname }}.csr"

    - name: create acme challenge folder
      become: yes
      file:
        path=/srv/www/acme-challenges/
        state=directory
        owner=nginx
        group=nginx
        mode=0755

    - name: request certificate
      become: yes
      become_user: nginx
      shell: >
        /etc/nginx/acme/acme-tiny
        --account-key /etc/nginx/acme/account.key
        --csr /etc/nginx/acme/{{ inventory_hostname }}.csr
        --acme-dir /srv/www/acme-challenges/
        > /etc/nginx/ssl/{{ inventory_hostname }}.crt
      args:
        chdir: /etc/nginx/acme/
        creates: /etc/nginx/ssl/{{ inventory_hostname }}.crt
      notify:
        - reload nginx

    - name: host https configuration
      become: yes
      template:
        src=host.ssl.conf
        dest=/etc/nginx/conf.d/{{ inventory_hostname }}.https.conf
      notify:
        - reload nginx

  handlers:
    - name: reload nginx
      become: yes
      service:
        name=nginx
        state=restarted
